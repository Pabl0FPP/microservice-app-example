name: Build and Push Microservices

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  generate-tag:
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.tag.outputs.tag }}
    steps:
      - name: Generate image tag
        id: tag
        run: |
          TAG="v1.0.${{ github.run_number }}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Generated tag: $TAG"

  build-auth-api:
    needs: generate-tag
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push auth-api
      uses: docker/build-push-action@v5
      with:
        context: ./auth-api
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/auth-api:${{ needs.generate-tag.outputs.image_tag }}
          ${{ secrets.DOCKER_USERNAME }}/auth-api:latest

  build-todos-api:
    needs: generate-tag
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push todos-api
      uses: docker/build-push-action@v5
      with:
        context: ./todos-api
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/todos-api:${{ needs.generate-tag.outputs.image_tag }}
          ${{ secrets.DOCKER_USERNAME }}/todos-api:latest

  build-users-api:
    needs: generate-tag
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push users-api
      uses: docker/build-push-action@v5
      with:
        context: ./users-api
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/users-api:${{ needs.generate-tag.outputs.image_tag }}
          ${{ secrets.DOCKER_USERNAME }}/users-api:latest

  build-frontend:
    needs: generate-tag
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push frontend
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/frontend:${{ needs.generate-tag.outputs.image_tag }}
          ${{ secrets.DOCKER_USERNAME }}/frontend:latest

  build-log-processor:
    needs: generate-tag
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push log-message-processor
      uses: docker/build-push-action@v5
      with:
        context: ./log-message-processor
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/log-message-processor:${{ needs.generate-tag.outputs.image_tag }}
          ${{ secrets.DOCKER_USERNAME }}/log-message-processor:latest

  save-image-tag:
    needs: [generate-tag, build-auth-api, build-todos-api, build-users-api, build-frontend, build-log-processor]
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'
    
    steps:
    - name: Save image tag to file
      run: echo "${{ needs.generate-tag.outputs.image_tag }}" > image-tag.txt
    
    - name: Upload image tag artifact
      uses: actions/upload-artifact@v3
      with:
        name: image-tag
        path: image-tag.txt
        retention-days: 5
