jwt.secret=myfancysecret
server.port=8083

spring.application.name=users-api
spring.zipkin.baseUrl=${ZIPKIN_URL:http://myapp-zipkin:9411/api/v2/spans}
spring.sleuth.sampler.percentage=100.0

logging.level.web=DEBUG
logging.level.org.springframework.web=DEBUG
logging.level.org.springframework.security=DEBUG
logging.level.root=INFO
server.tomcat.accesslog.enabled=true
server.tomcat.accesslog.pattern=%t %a "%r" %s (%D ms)

# Circuit Breaker Configuration
management.endpoints.web.exposure.include=health,info,metrics,circuitbreakers
management.endpoint.health.show-details=always
management.health.circuitbreakers.enabled=true

# Configuración de Resilience4j (opcional - ya tenemos en código)
resilience4j.circuitbreaker.instances.database.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.database.wait-duration-in-open-state=30s
resilience4j.circuitbreaker.instances.database.sliding-window-size=10
resilience4j.circuitbreaker.instances.database.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.database.slow-call-rate-threshold=50
resilience4j.circuitbreaker.instances.database.slow-call-duration-threshold=2s
resilience4j.circuitbreaker.instances.database.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.database.automatic-transition-from-open-to-half-open-enabled=true

# Logging para Circuit Breaker
logging.level.io.github.resilience4j=DEBUG
logging.level.com.elgris.usersapi.service=INFO