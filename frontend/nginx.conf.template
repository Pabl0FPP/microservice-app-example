events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server {
        listen 80;
        server_name localhost;

        # === Static frontend (SPA) ===
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        # === Auth API ===
        location /api/auth/ {
            proxy_pass https://${AUTH_API_URL}/;
            proxy_set_header Host ${AUTH_API_URL};
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # === Login endpoint ===
        location /login {
            proxy_pass https://${AUTH_API_URL}/login;
            proxy_set_header Host ${AUTH_API_URL};
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # === Todos API ===
        location /api/todos/ {
            proxy_pass https://${TODOS_API_URL}/;
            proxy_set_header Host ${TODOS_API_URL};
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # === Todos direct endpoint (including sub-paths like /todos/3) ===
        location ~ ^/todos(.*)$ {
            proxy_pass https://${TODOS_API_URL}/todos$1;
            proxy_set_header Host ${TODOS_API_URL};
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Authorization $http_authorization;
            proxy_pass_request_headers on;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # === Users API ===
        location /api/users/ {
            proxy_pass https://${USERS_API_URL}/;
            proxy_set_header Host ${USERS_API_URL};
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
        }

        # === Config file ===
        location /config.js {
            root /usr/share/nginx/html;
            add_header Content-Type application/javascript;
        }

        # === Zipkin proxy ===
        location /zipkin {
            proxy_pass http://${ZIPKIN_URL}/api/v2/spans;

            proxy_http_version 1.1;
            proxy_set_header Connection "";

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # === Zipkin health check ===
        location /zipkin-health {
            proxy_pass http://${ZIPKIN_URL}/health;

            proxy_http_version 1.1;
            proxy_set_header Connection "";

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }


        # === Health check ===
        location /health {
            access_log off;
            return 200 "Frontend healthy\n";
            add_header Content-Type text/plain;
        }

        # === Security headers (b√°sico) ===
        add_header X-Frame-Options SAMEORIGIN;
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
    }
}
