services:
  # Database and message broker
  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    networks:
      - microservices-net
    volumes:
      - redis-data:/data
    restart: unless-stopped

  # Distributed tracing
  zipkin:
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - microservices-net
    restart: unless-stopped

  # Users API (Java/Spring Boot)
  users-api:
    build:
      context: ./users-api
    ports:
      - "8083:8083"
    environment:
      - SERVER_PORT=8083
      - JWT_SECRET=myfancysecret
      - SPRING_ZIPKIN_BASEURL=http://zipkin:9411/
    depends_on:
      - zipkin
    networks:
      - microservices-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8083/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Authentication API (Go)
  auth-api:
    build:
      context: ./auth-api
    ports:
      - "8000:8000"
    environment:
      - AUTH_API_PORT=8000
      - JWT_SECRET=myfancysecret
      - USERS_API_ADDRESS=http://users-api:8083
      - ZIPKIN_URL=http://zipkin:9411/api/v2/spans
    depends_on:
      - users-api
      - zipkin
    networks:
      - microservices-net
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8000/version || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Todos API (Node.js)
  todos-api:
    build:
      context: ./todos-api
    ports:
      - "8082:8082"
    environment:
      - TODO_API_PORT=8082
      - JWT_SECRET=myfancysecret
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
      - ZIPKIN_URL=http://zipkin:9411/api/v2/spans
    depends_on:
      - redis
      - zipkin
    networks:
      - microservices-net
    restart: unless-stopped

  # Log Message Processor (Python)
  log-message-processor:
    build:
      context: ./log-message-processor
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_CHANNEL=log_channel
      - ZIPKIN_URL=http://zipkin:9411/api/v2/spans
    depends_on:
      - redis
      - zipkin
    networks:
      - microservices-net
    restart: unless-stopped

  # Frontend (Vue.js with Nginx)
  frontend:
    build:
      context: ./frontend
    ports:
      - "80:80"
    depends_on:
      - auth-api
      - todos-api
    networks:
      - microservices-net
    restart: unless-stopped

networks:
  microservices-net:
    driver: bridge

volumes:
  redis-data: